@use './defs';
@use './defaults';

html,
body {
	width: 100%;
	height: 100%;
}

body {
	background-color: defs.$background-color;
}

#svelte {
	min-height: 100%;
	display: flex;
	flex-direction: column;
}

main > .page {
	position: relative;
}

.loading .page:not(.splash-page) {
	display: none;
}

html {
	font-family: defs.$body-font;
}

.font-hitchcock,
h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: Hitchcock, serif;
	text-underline-offset: 30%;
}
.font-sans {
	font-family: 'Akzidenz Grotesk', sans-serif;
}

.fill-current {
	fill: currentColor;
}

.document,
.table {
	flex: 1;
	position: relative;
	padding: 2rem;
	background-color: defs.$yellow-card-background-color;
	@include defs.shadow;
}

.close-button {
	@include defs.plain-button;
	@include defs.close-button;
}
.table-page .close-button,
.help-page .close-button,
.version-page .close-button,
.intro-page .close-button,
.detail-remove.close-button {
	position: absolute;
	right: 0;
	top: 0;
	margin: 2rem;
}

@media (min-width: 40em) {
	.setup-page {
		flex: 1;
		@include defs.flex(column, $vertical: center, $horizontal: stretch);

		.pairs-outer {
			flex: 1;
			overflow: auto;
		}

		.pair {
			align-self: stretch;
			padding: 1rem;
		}
	}
}

.setup-page {
	overflow: auto;
	text-align: center;

	.playset {
		@include defs.flex(row, $horizontal: center, $vertical: center);

		&:hover {
			.edit {
				opacity: 1;
			}
		}
	}

	.playset-name {
		order: 2;
		font-size: 2rem;
		font-family: defs.$heading-font;
		color: defs.$heading-color;

		.playset-name-text {
			@include defs.editable(defs.$heading-color);
			vertical-align: middle;
		}

		position: relative;
		.edit {
			@include defs.edit-button;
			display: inline;
			margin-left: 0;
			position: static;
			vertical-align: middle;
		}
	}

	#player-count-control-box {
		order: 3;
	}

	#randomize-button-box {
		order: 1;

		a,
		button {
			@include defs.plain-button;
			@include defs.button;
			padding: 1rem;
			display: inline-block;
		}
	}

	#player-count-control {
		font-family: defs.$heading-font;
		padding: 0.25rem;
	}

	@media (max-width: 40em) {
		.playset {
			flex-wrap: wrap;
		}

		#player-count-control-box {
			width: 100%;
			margin-bottom: 1rem;
		}

		#randomize-button-box {
			z-index: 1;
			width: 100%;
			margin-top: 1rem;
		}
	}

	@media (min-width: 40em) {
		.playset {
			flex-shrink: 0;
			padding: 1rem;
		}

		.playset-name {
			flex: 1;
		}

		#player-count-control-box {
			margin-left: 1rem;
		}

		#randomize-button-box {
			margin-right: 1rem;
		}
	}

	.item {
		margin-bottom: 1rem;
	}
	.item:last-child {
		margin-bottom: 0;
	}

	.item {
		padding: 1rem;
		background-color: defs.$yellow-card-background-color;
		@include defs.shadow;
	}

	.relationship-heading,
	.detail-heading {
		font-family: defs.$heading-font;
		font-size: 0.75rem;
		color: hsl(0, 100%, 35%);
	}

	.unspecified-detail {
		@include defs.flex(column, $horizontal: stretch, $vertical-spacing: 1rem);

		.detail-control {
			flex: 1;
			@include defs.plain-button;
			@include defs.button;
			padding: 0.5rem;
		}
	}

	.detail:not(.need):not(.location):not(.object) {
		.specified-detail {
			display: none;
		}
	}

	.detail.need,
	.detail.location,
	.detail.object {
		.unspecified-detail {
			display: none;
		}
	}

	.detail.need {
		background-color: defs.$red-card-background-color;
	}

	.detail.location {
		background-color: defs.$green-card-background-color;
	}

	.detail.object {
		background-color: defs.$blue-card-background-color;
	}

	.category,
	.element {
		@include defs.flex(row, $vertical: center, $horizontal-spacing: 1rem);
	}

	a.name {
		@include defs.editable(transparentize(defs.$white, 0.5));

		&:hover,
		&:focus {
			text-decoration: underline;
		}
	}

	.relationship-category,
	.detail-category {
		font-family: defs.$heading-font;
	}

	.die {
		@include defs.plain-button;
	}

	.relationship-element-name,
	.detail-element-name {
		font-size: 1.25rem;
	}

	.player-image {
		width: auto;
		height: 6rem;
		border: 1rem solid defs.$background-color;
		background-color: defs.$background-color;
	}

	.player-name-outer {
		background-color: defs.$background-color;
		border: 1rem solid defs.$background-color;
		border-top: 0;
		font-size: 1.5rem;

		position: relative;

		.edit {
			@include defs.edit-button;
		}
		&:hover {
			.edit {
				opacity: 1;
			}
		}
	}

	.player-name {
		color: defs.$heading-color;
		font-family: defs.$heading-font;
		@include defs.editable(defs.$heading-color);
	}

	.remove {
		img {
			height: 1.25em;
			vertical-align: middle;
		}
	}

	.detail-type {
		position: relative;
	}

	.detail-type .remove {
		position: absolute;
		right: 0;
		top: 0;
	}

	.detail-type:hover .remove,
	.detail-type:focus .remove,
	.removable.relationship-category:hover .remove,
	.removable.relationship-category:focus .remove,
	.removable.relationship-element:hover .remove,
	.removable.relationship-element:focus .remove,
	.removable.detail-category:hover .remove,
	.removable.detail-category:focus .remove,
	.removable.detail-element:hover .remove,
	.removable.detail-element:focus .remove {
		visibility: visible;
	}

	@media (max-width: 40em) {
		.detail-type .remove,
		.removable.relationship-category .remove,
		.removable.relationship-element .remove,
		.removable.detail-category .remove,
		.removable.detail-element .remove {
			visibility: visible !important;
		}
	}
}

.table-page {
	flex: 1 0;
	@include defs.flex(row, $horizontal: center, $vertical: center);

	.table {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		align-items: stretch;
		max-width: 80rem;
	}

	.table-subtitle {
		order: 3;
	}

	.table-title,
	.table-subtitle {
		align-self: center;
		text-align: center;
		font-size: 1.5rem;
		font-family: defs.$heading-font;
		color: defs.$text-red;
	}

	.table-title {
		margin-bottom: 1.5rem;
	}

	.table-subtitle {
		margin-top: 0.75rem;
		.table-subtitle-text {
			@include defs.editable(transparentize(defs.$white, 0.5));
		}
		position: relative;
		.edit {
			@include defs.edit-button;
		}
		&:hover .edit {
			opacity: 1;
		}
	}

	@media (min-width: 50em) {
		.categories {
			@include defs.columns(2, 1rem);
			counter-reset: category;
		}

		.category {
			-webkit-column-break-inside: avoid;
			page-break-inside: avoid;
			break-inside: avoid;
		}
	}

	.category {
		counter-increment: category;
	}

	// Counters are not incremented for elements with `display: none`, so we
	// only hide the descendants here. We also apply margins only on the
	// descendants, so that this element does not take up space when disabled.
	.category.disabled > * {
		display: none;
	}

	.category-name {
		font-size: 1.125rem;
		font-family: defs.$heading-font;
		margin-bottom: 0.75rem;

		.category-link {
			@include defs.plain-button;
			display: inline;

			text-align: left;
			border-bottom: 1px solid transparent;

			&:before {
				content: counter(category) ' ';
			}

			&[href]:hover,
			&[href]:focus {
				border-bottom-color: defs.$black;
			}
		}

		position: relative;
		.edit {
			@include defs.edit-button(inside);
		}
		&:hover .edit {
			opacity: 1;
		}
	}

	.elements {
		margin-bottom: 0.75rem;
		counter-reset: element;
	}

	.element-name {
		counter-increment: element;
		@include defs.die-item;

		.element-link {
			display: inline;

			&[href]:hover,
			&[href]:focus {
				text-decoration: underline;
			}
		}

		position: relative;
		.edit {
			@include defs.edit-button(inside);
		}
		&:hover .edit {
			opacity: 1;
		}
	}

	.table-title,
	.table-subtitle,
	.category-link,
	.element-link {
		@include defs.editable(transparentize(defs.$white, 0.5));
	}
}

.table-page.single-category {
	.categories {
		@include defs.columns(1);
	}

	.category-name {
		font-size: 2rem;
		margin-bottom: 1rem;
	}

	.element-name {
		font-size: 1.5em;
	}
}

.back {
	position: absolute;
	left: 0;
	top: 0;
	@include defs.plain-button;
	@include defs.button;
	padding: 1rem;
	margin: 1rem; // Beware that flex mixin margins may apply here.
}

@media (max-width: 40em) {
	.back {
		display: none;
	}

	.edit {
		opacity: 1 !important;
	}

	.page:not(.table-page) .edit {
		position: static !important;
		display: inline !important;
		margin: 0 !important;
		vertical-align: middle;
	}
}

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}
